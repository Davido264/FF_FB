// <auto-generated />
using System;
using Facturacion.DAL.BDContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Facturacion.DAL.Migrations
{
    [DbContext(typeof(BdfacturacionContext))]
    [Migration("20231223223729_add_UrlImage")]
    partial class addUrlImage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Facturacion.Model.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool?>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("esActivo")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C6A08EBA0");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Facturacion.Model.Cliente", b =>
                {
                    b.Property<string>("CedulaCliente")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cedulaCliente");

                    b.Property<string>("Correo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("direccion");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nombreCompleto");

                    b.HasKey("CedulaCliente")
                        .HasName("PK__Cliente__D14E16622F5B8F3E");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("Facturacion.Model.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DetalleV__BFE2843F5009329B");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("Facturacion.Model.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icono");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Url")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("url");

                    b.HasKey("IdMenu")
                        .HasName("PK__Menu__C26AF4837B005897");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Facturacion.Model.MenuRol", b =>
                {
                    b.Property<int>("IdMenuRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMenuRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenuRol"));

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.HasKey("IdMenuRol")
                        .HasName("PK__MenuRol__9D6D61A4187F6A1D");

                    b.HasIndex("IdMenu");

                    b.HasIndex("IdRol");

                    b.ToTable("MenuRol", (string)null);
                });

            modelBuilder.Entity("Facturacion.Model.NumeroDocumento", b =>
                {
                    b.Property<int>("IdNumeroDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idNumeroDocumento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumeroDocumento"));

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("UltimoNumero")
                        .HasColumnType("int")
                        .HasColumnName("ultimo_Numero");

                    b.HasKey("IdNumeroDocumento")
                        .HasName("PK__NumeroDo__471E421AAA8A9A07");

                    b.ToTable("NumeroDocumento", (string)null);
                });

            modelBuilder.Entity("Facturacion.Model.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("esActivo")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<string>("UrlImagen")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A1327FCE5C11");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Facturacion.Model.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__3C872F76607A13BA");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("Facturacion.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo");

                    b.Property<bool?>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("esActivo")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreCompleto");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6B76B8615");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Facturacion.Model.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idVenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<string>("CedulaCliente")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cedulaCliente");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("numeroDocumento");

                    b.Property<string>("TipoPago")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tipoPago");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__077D5614A84EDF58");

                    b.HasIndex("CedulaCliente");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Facturacion.Model.DetalleVenta", b =>
                {
                    b.HasOne("Facturacion.Model.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DetalleVe__idPro__5441852A");

                    b.HasOne("Facturacion.Model.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DetalleVe__idVen__534D60F1");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("Facturacion.Model.MenuRol", b =>
                {
                    b.HasOne("Facturacion.Model.Menu", "IdMenuNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdMenu")
                        .HasConstraintName("FK__MenuRol__idMenu__3C69FB99");

                    b.HasOne("Facturacion.Model.Rol", "IdRolNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__MenuRol__idRol__3D5E1FD2");

                    b.Navigation("IdMenuNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Facturacion.Model.Producto", b =>
                {
                    b.HasOne("Facturacion.Model.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__Producto__idCate__48CFD27E");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("Facturacion.Model.Usuario", b =>
                {
                    b.HasOne("Facturacion.Model.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuario__idRol__403A8C7D");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("Facturacion.Model.Venta", b =>
                {
                    b.HasOne("Facturacion.Model.Cliente", "CedulaClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("CedulaCliente")
                        .HasConstraintName("FK__Venta__cedulaCli__571DF1D5");

                    b.Navigation("CedulaClienteNavigation");
                });

            modelBuilder.Entity("Facturacion.Model.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Facturacion.Model.Cliente", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Facturacion.Model.Menu", b =>
                {
                    b.Navigation("MenuRols");
                });

            modelBuilder.Entity("Facturacion.Model.Producto", b =>
                {
                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("Facturacion.Model.Rol", b =>
                {
                    b.Navigation("MenuRols");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Facturacion.Model.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
